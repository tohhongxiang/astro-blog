---
import NotesLayout from "@/layouts/notes-layout.astro";
import NoteItem from "@/components/note-item";
import { ChevronDown } from "lucide-react";
import { getCollection } from "astro:content";

const rawNotes = await getCollection("notes");

// Group notes by folder and sort
const groups = new Map<string, typeof rawNotes>();
for (const note of rawNotes) {
	const folder = note.id.split("/")[0] ?? "uncategorized";
	if (!groups.has(folder)) groups.set(folder, []);
	groups.get(folder)!.push(note);
}

const groupedByFolder = Array.from(groups.entries())
	.sort(([a], [b]) => a.localeCompare(b))
	.map(
		([folder, items]) =>
			[
				folder,
				items.sort(
					(a, b) =>
						new Date(b.data.date).getTime() -
						new Date(a.data.date).getTime(),
				),
			] as const,
	);
---

<NotesLayout active="folders">
	<div class="flex flex-col gap-8">
		{
			groupedByFolder.map(([folder, items]) => (
				<section>
					<details open class="group/folder">
						<summary class="border-muted mt-8 mb-2 flex cursor-pointer items-center gap-2 border-t px-4 pt-4 select-none">
							<ChevronDown
								className="h-3.5 w-3.5 shrink-0 text-muted-foreground transition-transform -rotate-90 group-open/folder:rotate-0"
								aria-hidden="true"
							/>
							<span class="text-muted-foreground text-xs font-medium tracking-wider uppercase">
								{folder.replace(/[-_]/g, " ")} ({items.length})
							</span>
						</summary>
						<div>
							{items.map((note) => (
								<NoteItem note={note} />
							))}
						</div>
					</details>
				</section>
			))
		}
	</div>
</NotesLayout>
